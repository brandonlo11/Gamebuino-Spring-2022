#include <TicTacToeDisplay.h>
TicTacToeDisplay display; 

int power = 2;
int VRY = A1;
int VRX = A0;
int i = 4;
int turn = 0;
int squares [9] = {0, 0, 0, 0, 0, 0, 0, 0, 0};
int gameOver = 0;

void setup() { 
  Serial.begin(9600);
  pinMode(VRY, INPUT);
  pinMode (VRX, INPUT);
  pinMode(power,INPUT_PULLUP);
  display.begin();
  display.drawBoard();
}

void loop() {
  display.deselectSquare(i);
  int x = analogRead(VRX);
  int y = analogRead(VRY);
  int z = digitalRead(power);
  delay(500);
  if (y == 0){ //up
    if ( i == 3 || i == 4 || i == 5 || i == 6 || i == 7 || i == 8){
      i = i -3;
    }
  }
  if (y == 1023){ //down
    if ( i == 3 || i == 4 || i == 5 || i == 0 || i == 1 || i == 2){
      i = i +3;
    }
  }
  if (x == 0){ //left
    if ( i == 1 || i == 4 || i == 7 || i == 2 || i == 5 || i == 8){
      i = i -1;
    }
  }
  if (x == 1023){ //right
    if ( i == 1 || i == 4 || i == 7 || i == 0 || i == 3 || i == 6){
      i = i +1;
    }
  }
  if (z == 0){
    if (turn == 0){
      if (squares[i] == 0){
      display.drawX(i);
      turn++;
      squares[i] = 1;
      }
    }
    else{
      if (squares[i] == 0){
      display.drawO(i);
      turn = 0;
      squares[i] = 2;
      }
    }
  }
  if (squares[0] == 1 && squares[4] == 1 && squares[8] == 1){
    display.drawVictoryLine(0,8);
     display.drawLargeText("  X       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[0] == 1 && squares[1] == 1 && squares[2] == 1){
    display.drawVictoryLine(0,2);
     display.drawLargeText("  X       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[0] == 1 && squares[3] == 1 && squares[6] == 1){
    display.drawVictoryLine(0,6);
    display.drawLargeText("  X       Wins!");
    delay(2000);
    gameOver = 1;
  }
  if (squares[6] == 1 && squares[7] == 1 && squares[8] == 1){
    display.drawVictoryLine(6,8);
    display.drawLargeText("  X       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[2] == 1 && squares[5] == 1 && squares[8] == 1){
    display.drawVictoryLine(2,8);
    display.drawLargeText("  X       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[2] == 1 && squares[4] == 1 && squares[6] == 1){
    display.drawVictoryLine(2,6);
    display.drawLargeText("  X       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[1] == 1 && squares[4] == 1 && squares[7] == 1){
    display.drawVictoryLine(1,7);
    display.drawLargeText("  X       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[3] == 1 && squares[4] == 1 && squares[5] == 1){
    display.drawVictoryLine(3,5);
    display.drawLargeText("  X       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[0] == 2 && squares[4] == 2 && squares[8] == 2){
    display.drawVictoryLine(0,8);
    display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[0] == 2 && squares[1] == 2 && squares[2] == 2){
    display.drawVictoryLine(0,2);
     display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[0] == 2 && squares[3] == 2 && squares[6] == 2){
    display.drawVictoryLine(0,6);
    display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[6] == 2 && squares[7] == 2 && squares[8] == 2){
    display.drawVictoryLine(6,8);
    display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[2] == 2 && squares[5] == 2 && squares[8] == 2){
    display.drawVictoryLine(2,8);
    display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[2] == 2 && squares[4] == 2 && squares[6] == 2){
    display.drawVictoryLine(2,6);
    display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[1] == 2 && squares[4] == 2 && squares[7] == 2){
    display.drawVictoryLine(1,7);
    display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  if (squares[3] == 2 && squares[4] == 2 && squares[5] == 2){
    display.drawVictoryLine(3,5);
    display.drawLargeText("  O       Wins!");
     delay(2000);
     gameOver = 1;
  }
  display.selectSquare(i);
  if (gameOver == 1){
    if (z == 0){
      display.clearScreen();
      gameOver = 0;
      for (int j = 0; j <= 8; j = j + 1){
      display.clearSquare(j); //erases the bottom left square (in this case erasing the O that was there)
      squares[j] = 0;
      }
      turn = 0;
      i = 4;
  //if we want to clear and erase the entire screen, we can use clearScreen()
  delay(1000);
  //you can always redraw the board with another call to drawBoard()
  display.drawBoard(); 
      delay(1000);
    }
  }
}
